@startuml
title Диаграмма классов для "Умный дом" - "Сервис сценариев"

'class Gateway {
'    +manageDevices()
'    +manageSchedules()
'    +manageScenarios()
'}

class MQTTBroker {
    +sendCommand(device: Device, command: String)
    +receiveDeviceStatus(device: Device): DeviceStatus
}

class DeviceScenariosController {
    +createScenario(scenario: Scenario)
    +editScenario(scenarioId: UUID, updatedScenario: Scenario)
    +notifyScheduleChange()
    +notifyScenarioChange()
}

class DeviceScenariosScheduler {
    +scheduleScenarios()
    +getScenarios(): List<Scenario>
}

class DeviceScenariosManager {
    +executeScenario(scenario: Scenario)
    +reactToMessage(event: Event)
    +getScenarios(): List<Scenario>
}

class Scenario {
    -id: UUID
    -name: String
    -actions: List<Action>
    -schedule: Schedule
}

class Action {
    -id: UUID
    -command: String
    -targetDeviceId: UUID
}

class Schedule {
    -id: UUID
    -cronExpression: String
}

class DeviceScenariosDatabase {
    +saveScenario(scenario: Scenario)
    +editScenario(scenarioId: UUID, updatedScenario: Scenario)
    +getScenarios(): List<Scenario>
}

'Gateway --> DeviceScenariosController : Управляет
DeviceScenariosController --> DeviceScenariosScheduler : Уведомление об изменениях в расписаниях
DeviceScenariosController --> DeviceScenariosManager : Уведомление об изменении в сценариях
DeviceScenariosController --> DeviceScenariosDatabase : Создание/редактирование сценариев
DeviceScenariosScheduler --> DeviceScenariosDatabase : Получение расписаний/сценариев
DeviceScenariosManager --> DeviceScenariosDatabase : Получение сценариев
DeviceScenariosScheduler --> MQTTBroker : отправка команд
DeviceScenariosManager --> MQTTBroker : отправка команд
MQTTBroker --> DeviceScenariosManager : отправляет статус устройства
Scenario "1" *-- "many" Action : has
Scenario "1" *-- "1" Schedule : has
DeviceScenariosScheduler --> Scenario : планирует выполнение
DeviceScenariosManager --> Scenario : выполняет

@enduml
